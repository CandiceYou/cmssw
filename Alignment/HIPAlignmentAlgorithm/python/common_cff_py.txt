import FWCore.ParameterSet.Config as cms

process = cms.Process("Alignment")
process.load("Alignment.CommonAlignmentProducer.AlignmentTrackSelector_cfi")
process.load("RecoTracker.FinalTrackSelectors.TrackerTrackHitFilter_cff")
#process.load("RecoTracker.TransientTrackingRecHit.TransientTrackingRecHitBuilderWithoutRefit_cfi")
process.load("RecoTracker.TrackProducer.TrackRefitters_cff")
process.load("RecoVertex.BeamSpotProducer.BeamSpot_cff")
process.load('Configuration.Geometry.GeometryRecoDB_cff')

#Tracker
from RecoTracker.GeometryESProducer.TrackerRecoGeometryESProducer_cfi import *

#Muon
from Geometry.MuonNumbering.muonNumberingInitialization_cfi import *
from RecoMuon.DetLayers.muonDetLayerGeometry_cfi import *

#  Alignment
from Geometry.TrackerGeometryBuilder.idealForDigiTrackerGeometry_cff import *
from Geometry.CSCGeometryBuilder.idealForDigiCscGeometry_cff import *
from Geometry.DTGeometryBuilder.idealForDigiDtGeometry_cff import *
process.load("Configuration.StandardSequences.MagneticField_cff")
#process.load("Configuration.StandardSequences.MagneticField_38T_cff")
#process.load("Configuration.StandardSequences.MagneticField_0T_cff")

# loading the alignment producer
process.load("Alignment.CommonAlignmentProducer.AlignmentProducer_cff")

# loading DB constants
#process.load("Configuration.StandardSequences.FrontierConditions_GlobalTag_condDBv2_cff")
process.load("Configuration.StandardSequences.FrontierConditions_GlobalTag_cff")
process.GlobalTag.globaltag = '80X_dataRun2_Prompt_v4'

process.load("FWCore.MessageService.MessageLogger_cfi")
process.MessageLogger.cerr.FwkReport.reportEvery = 10000

# configure the database file - use survey one for default
#from CondCore.DBCommon.CondDBSetup_cfi import *
from CondCore.CondDB.CondDB_cfi import *

process.GlobalTag.toGet = cms.VPSet(
    cms.PSet(record = cms.string('TrackerAlignmentRcd'),
             tag = cms.string('Alignments_singleIOV'),
             connect = cms.string('sqlite_file:/afs/cern.ch/cms/CAF/CMSALCA/ALCA_TRACKERALIGN2/HIP/cayou/CMSSW_8_0_0_patch3/src/Alignment/HIPAlignmentAlgorithm/singleIOV_db/alignment.db')
             ),

    cms.PSet(record = cms.string('TrackerSurfaceDeformationRcd'),
             tag = cms.string('Deformations_singleIOV'),
             connect = cms.string('sqlite_file:/afs/cern.ch/cms/CAF/CMSALCA/ALCA_TRACKERALIGN2/HIP/cayou/CMSSW_8_0_0_patch3/src/Alignment/HIPAlignmentAlgorithm/singleIOV_db/deformation.db')
             ),
    cms.PSet(record = cms.string('GlobalPositionRcd'),
             tag = cms.string('GlobalAlignment_singleIOV'),
             connect = cms.string('sqlite_file:/afs/cern.ch/cms/CAF/CMSALCA/ALCA_TRACKERALIGN2/HIP/cayou/CMSSW_8_0_0_patch3/src/Alignment/HIPAlignmentAlgorithm/singleIOV_db/global.db')
             ),
    )

process.AlignmentProducer.applyDbAlignment = True

process.AlignmentProducer.checkDbAlignmentValidity=False
process.AlignmentProducer.algoConfig.multiIOV= True
process.AlignmentProducer.algoConfig.IOVrange=cms.vuint32(<iovs>)

### Set parameters to align (all modules in this example)

process.AlignmentProducer.ParameterBuilder.Selector = cms.PSet(
    alignParams = cms.vstring(
        'TrackerTPBHalfBarrel,111111',
        'TrackerTPEHalfDisk,111111',
        'TrackerTIBHalfBarrel,111111',
        'TrackerTOBHalfBarrel,111111',
        'TrackerTIDEndcap,111111',
        'TrackerTECEndcap,111111'

#      'TrackerTPBModule,101101',
#      'TrackerTPEModule,111111',
#      'TrackerTIBModuleUnit,101111',
#      'TrackerTOBModuleUnit,101111',
#      'TrackerTIDModuleUnit,111111',
#      'TrackerTECModuleUnit,111111'

#      'TrackerTPBModule,101101',
#      'TrackerTPEModule,111111',
#      'TrackerTIBModule,101111',
#      'TrackerTOBModule,101111',
#      'TrackerTIDModule,110111',
#      'TrackerTECModule,110111'

#      'TrackerTPBLadder,111111',
#      'TrackerTPEPanel,111111',
#      'TrackerTIBString,111111',
#      'TrackerTOBRod,111111',
#      'TrackerTIDRing,111111',
#      'TrackerTECPetal,111111'

#      'TrackerTPBLayer,111111',
#      'TrackerTPEHalfDisk,111111',
#      'TrackerTIBLayer,111111',
#      'TrackerTOBLayer,111111',
#      'TrackerTIDDisk,111111',


#        'TECDets,111111,endCapDS', 
#        'TIDDets,001000,endCapDS', 
#        'TECDets,111111,endCapSS', 
#        'TIDDets,001000,endCapSS', 
#        'TECDets,111111,TECRing1',
#        'TECDets,111111,TECRing2',
#        'TECDets,111111,TECRing3',
#        'TECDets,111111,TECRing4',
#        'TECDets,111111,TECRing5',
#        'TECDets,111111,TECRing6',
#        'TECDets,111111,TECRing7',
                                                                 
   ),
    endCapSS = cms.PSet(
        phiRanges = cms.vdouble(),
        rRanges = cms.vdouble(40.0, 60.0, 75.0, 999.0),
        etaRanges = cms.vdouble(),
        yRanges = cms.vdouble(),
        xRanges = cms.vdouble(),
        zRanges = cms.vdouble()
    ),
    endCapDS = cms.PSet(
        phiRanges = cms.vdouble(),
        rRanges = cms.vdouble(0.0, 40.0, 60.0, 75.0),
        etaRanges = cms.vdouble(),
        yRanges = cms.vdouble(),
        xRanges = cms.vdouble(),
        zRanges = cms.vdouble()
    ),
    TECRing1 = cms.PSet(
        phiRanges = cms.vdouble(),
        rRanges = cms.vdouble(20,30),
        etaRanges = cms.vdouble(),
        yRanges = cms.vdouble(),
        xRanges = cms.vdouble(),
        zRanges = cms.vdouble()
    ),
    TECRing2 = cms.PSet(
        phiRanges = cms.vdouble(),
        rRanges = cms.vdouble(30,40),
        etaRanges = cms.vdouble(),
        yRanges = cms.vdouble(),
        xRanges = cms.vdouble(),
        zRanges = cms.vdouble()
    ),
    TECRing3 = cms.PSet(
        phiRanges = cms.vdouble(),
        rRanges = cms.vdouble(40,50),
        etaRanges = cms.vdouble(),
        yRanges = cms.vdouble(),
        xRanges = cms.vdouble(),
        zRanges = cms.vdouble()
    ),
    TECRing4 = cms.PSet(
        phiRanges = cms.vdouble(),
        rRanges = cms.vdouble(50,60),
        etaRanges = cms.vdouble(),
        yRanges = cms.vdouble(),
        xRanges = cms.vdouble(),
        zRanges = cms.vdouble()
    ),
    TECRing5 = cms.PSet(
        phiRanges = cms.vdouble(),
        rRanges = cms.vdouble(65,75),
        etaRanges = cms.vdouble(),
        yRanges = cms.vdouble(),
        xRanges = cms.vdouble(),
        zRanges = cms.vdouble()
    ),
    TECRing6 = cms.PSet(
        phiRanges = cms.vdouble(),
        rRanges = cms.vdouble(80,90),
        etaRanges = cms.vdouble(),
        yRanges = cms.vdouble(),
        xRanges = cms.vdouble(),
        zRanges = cms.vdouble()
    ),
    TECRing7 = cms.PSet(
        phiRanges = cms.vdouble(),
        rRanges = cms.vdouble(95,105),
        etaRanges = cms.vdouble(),
        yRanges = cms.vdouble(),
        xRanges = cms.vdouble(),
        zRanges = cms.vdouble()
    ),
    TOBscan = cms.PSet(
        phiRanges = cms.vdouble(),
        rRanges = cms.vdouble(82,90),
        etaRanges = cms.vdouble(),
        yRanges = cms.vdouble(),
        xRanges = cms.vdouble(),
        zRanges = cms.vdouble(90,110)
    ),
)

